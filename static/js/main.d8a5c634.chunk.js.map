{"version":3,"sources":["assets/images/BEINSERVICE.svg","assets/images/BEAUTHENTIC.svg","assets/images/BEACCOUNTABLE.svg","assets/images/BRINGEXCELLENCE.svg","assets/images/loader.gif","assets/images/kudos/ace.svg","assets/images/kudos/club.svg","assets/images/kudos/diamond.svg","assets/images/kudos/novice.svg","assets/images/kudos/star.svg","assets/images/awards/blue.svg","assets/images/awards/bronze.svg","assets/images/awards/captain.svg","assets/images/awards/champion.svg","assets/images/awards/cheerleader.svg","assets/images/awards/coach.svg","assets/images/awards/contributor.svg","assets/images/awards/gold.svg","assets/images/awards/noGiven.svg","assets/images/awards/noReceived.svg","assets/images/awards/silver.svg","assets/images/awards/platinum.svg","assets/images/medalGray.png","assets/images/logos/apex-logo.svg","utils/createReducer.js","actions/index.js","reducers/login.js","reducers/all.js","utils/login.js","components/auth/auth.js","components/filters/filters.js","components/reportTable/reportTable.js","components/reports/reports.js","components/newComponents/Home/KudosBadges/constants.js","components/newComponents/Home/KudosBadges/KudosBadges.jsx","components/newComponents/Home/MedalsContainer/Medal/Medal.jsx","components/newComponents/Home/MedalsContainer/MedalTooltip/MedalTooltip.jsx","components/newComponents/Home/MedalsContainer/MedalsContainer.jsx","components/newComponents/Home/helpers.js","components/newComponents/Home/Home.jsx","components/navItem/navItem.js","components/profileTable/profileTable.js","components/ProfileModal/ProfileModal.js","components/MyActivity/MyActivity.js","components/newComponents/NavBar/NavBar.jsx","components/newComponents/Nomination/FormButtons/FormButtons.jsx","components/newComponents/Nomination/Values/constants.js","components/newComponents/Nomination/Values/Values.jsx","utils/transformations.js","components/newComponents/Nomination/constants.js","components/newComponents/Nomination/helpers.js","components/newComponents/Nomination/Nomination.jsx","components/newComponents/RouteNotFound/RouteNotFound.jsx","App.js","utils/constants.js","registerServiceWorker.js","index.js"],"names":["module","exports","createReducer","handlers","initialState","state","action","type","ACTIONS_NAMES","USER_LOGGED","ACTION_CREATORS","userLogged","isUserLogged","document","cookie","indexOf","actions","reducers","combineReducers","login","Cookies","fetch","process","method","then","response","json","window","location","href","authurl","catch","err","console","log","Auth","Component","constructor","props","super","render","className","src","loader","componentDidMount","hash","this","url","search","data","hashes","slice","split","i","length","decodeURI","replace","value","DATE","Date","moment","add","format","set","path","expires","setCookie","setTimeout","history","push","withRouter","connect","dispatch","bindActionCreators","Filters","initialDate","finalDate","cityGiven","cityReceived","managerGiven","managerReceived","corevalue","s","name","placeholder","onChange","e","dataRangeChange","label","filterChange","waves","onClick","clearFilters","applyFilters","ReportTable","getSvgCoreValue","valuecode","beau","beac","besrvc","briex","setValues","map","values","date","nomination","alt","awardInfo","coreValue","nominee","nomineeInfo","displayName","nominee_manager","manager","nominee_city","nominator","nominatorInfo","nominator_manager","nominator_city","columns","Header","accessor","defaultPageSize","showPageSizeOptions","node","query","COOKIE","initializeDateRange","range","quarter","YEAR","getFullYear","Reports","loaded","bind","event","preventDefault","target","setState","VALUE","level","UNSAFE_componentWillMount","undefined","get","usertype","to","m","kudosBadgesNamesAndLegends","ace","legend","novice","club","star","diamond","badgesList","KudosBadges","awardsInformation","kudosBadges","kudos","badges","Object","keys","badge","key","medalList","noGiven","noReceived","blue","bronze","silver","gold","platinum","contributor","cheerleader","coach","captain","champion","Medal","count","medal","title","MedalTooltip","countToNext","currentMedal","nextMedal","Fragment","MedalsContainer","awardedData","awarded","earnedData","earned","nextAwardedData","nextBadges","nextEarnedData","next","HomePage","useState","setAwardsInformation","getAwardsData","a","username","headers","token","awardsInfo","error","message","awardsData","useEffect","NavItem","divider","children","ProfileTable","getCoreValue","getDiploma","id","diplomaURl","data-field","class","awards","medalGray","item","_id","reason","ProfileModal","active","sent","received","MyActivity","nominations_sent","nominations_received","page_loaded","fetchData","clearData","filter","user","email","header","modalOptions","ready","complete","trigger","RouterNavItem","NavBar","loginData","setLoginData","logo","Logo","brand","right","remove","signOutSession","FormButtons","sendForm","colorClassForValue","Values","onValueSelection","selectedValue","valuesList","Array","isArray","getValues","snake","valueClass","txt","charAt","toUpperCase","substr","toLowerCase","VALUES","DEFAULT_VALIDATIONS","valid","nomineeName","host","sendNomination","body","JSON","stringify","mode","status","validateEmail","emailAddress","getErrorMessage","validateField","validateMessage","NominationForm","setMessage","setNomineeName","setSelectedValue","validField","setValidField","handleBlur","formObject","validation","validatedField","errorMessage","assign","option","validateForm","Materialize","toast","isFormValid","forEach","field","onBlur","maxLength","RouteNotFound","pathname","App","basename","exact","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","store","createStore","ReactDOM","getElementById","URL","origin","addEventListener","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"kIAAAA,EAAOC,QAAU,IAA0B,yC,mBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,6C,6BCA3CD,EAAOC,QAAU,IAA0B,oC,kBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,0eCW5BC,EATO,CAACC,EAAW,GAAIC,EAAe,KAC1C,CAACC,EAAQD,EAAcE,IACW,oBAA1BH,EAASG,EAAOC,MAChBJ,EAASG,EAAOC,MAAMF,EAAOC,GAEjCD,ECPTG,EAAgB,CAClBC,YAAa,eAGXC,EAAkB,CACpBC,WAAU,KACC,CACHJ,KAAMC,EAAcC,eAKjB,6BAAID,GAAkBE,GCT/BN,EAAe,CACjBQ,cAAqD,IAAvCC,SAASC,OAAOC,QAAQ,WAY3Bb,IATQ,CACnB,CAACc,EAAQP,aAAcJ,GACZ,2BACAA,GADP,IAEIO,cAAc,KAKmBR,GCT9Ba,EAJEC,YAAgB,CAC7BC,U,uCCDEL,EAAS,IAAIM,IAGND,EAAQ,KAA6C,IAAvCN,SAASC,OAAOC,QAAQ,UAC3CM,MAAM,GAAD,OAHAC,oDAGA,UAAiB,CAAEC,OAAQ,QAChCC,KAAKC,GAAYA,EAASC,QAC1BF,KAAKC,GAAYE,OAAOC,SAASC,KAAOJ,EAASK,SACjDC,MAAOC,GAAQC,QAAQC,IAAI,wCAAwCF,IACvE,K,uBCSJ,MAAMG,UAAaC,YACjBC,YAAYC,GACVC,MAAMD,GAGRE,SACE,OACE,yBAAKC,UAAU,UACb,yBAAKC,IAAKC,OAKhBC,oBAME,IANmB,IAGfC,EAHc,EACyBC,KAAKR,MAAzCV,EADW,EACXA,SAAoBjB,EADT,EACDK,QAAUL,WACrBoC,EAAMnB,EAASoB,OAEjBC,EAAO,GACPC,EAASH,EAAII,MAAMJ,EAAIhC,QAAQ,KAAO,GAAGqC,MAAM,KAC1CC,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,IAElB,SADfR,EAAOK,EAAOG,GAAGD,MAAM,MACd,GACPP,EAAK,GAAKU,UAAUV,EAAK,IAEP,SAAXA,EAAK,GACZA,EAAK,GAAKA,EAAK,GAAGW,QAAQ,MAAO,KACb,YAAXX,EAAK,KACdA,EAAK,GAAKU,UAAUV,EAAK,KAE3BI,EAAKJ,EAAK,IAAMA,EAAK,GDpCDY,KACtB,IAAMC,EAAO,IAAIC,KAAKC,MAASC,IAAI,EAAE,QAAQC,UAC7ChD,EAAOiD,IAAI,QAASN,EAAO,CAAEO,KAAM,IAAMC,QAASP,KCoClDQ,CAAUjB,GACVtC,IACAwD,WAAYrB,KAAKR,MAAM8B,QAAQC,KAAK,KAAM,MAI/BC,kBAAWC,YA/CDlE,IAChB,CACLO,aAAcP,EAAMc,MAAMP,eAIF4D,IACnB,CAAExD,QAASyD,YAAmBzD,EAASwD,GAAWA,aAwCjCD,CAA4CpC,I,cCrDtE,MAAMuC,UAAgBtC,YAEpBC,YAAYC,GACVC,MAAMD,GACJQ,KAAKzC,MAAQ,CACXsE,YAAa7B,KAAKR,MAAMW,KAAK0B,YAC7BC,UAAW9B,KAAKR,MAAMW,KAAK2B,UAC3BC,UAAW/B,KAAKR,MAAMW,KAAK4B,UAC3BC,aAAchC,KAAKR,MAAMW,KAAK6B,aAC9BC,aAAcjC,KAAKR,MAAMW,KAAK8B,aAC9BC,gBAAiBlC,KAAKR,MAAMW,KAAK+B,gBACjCC,UAAWnC,KAAKR,MAAMW,KAAKgC,WAIjCzC,SAAU,IAAD,EASHM,KAAKR,MAAMW,KAPb0B,EAFK,EAELA,YACAC,EAHK,EAGLA,UACAC,EAJK,EAILA,UACAC,EALK,EAKLA,aACAC,EANK,EAMLA,aACAC,EAPK,EAOLA,gBACAC,EARK,EAQLA,UAGF,OACE,6BACE,kBAAC,MAAD,CAAKxC,UAAU,WACb,kBAAC,MAAD,CAAKyC,EAAG,IACN,wCAEF,kBAAC,MAAD,CAAKzC,UAAU,eACX,kBAAC,MAAD,CAAKyC,EAAG,IACJ,qCAEJ,kBAAC,MAAD,CAAKA,EAAG,IACN,wBAAIA,EAAG,EAAGzC,UAAU,cAApB,QACA,kBAAC,QAAD,CAAOyC,EAAG,GAAIC,KAAK,KAAK5E,KAAK,OAAOkC,UAAU,aAAa2C,YAAaT,EAAalB,MAAOkB,EAAaU,SAAWC,GAAMxC,KAAKR,MAAMiD,gBAAgBD,EAAE,cAEzJ,kBAAC,MAAD,CAAKJ,EAAG,IACN,wBAAIA,EAAG,EAAGzC,UAAU,cAApB,MACA,kBAAC,QAAD,CAAOyC,EAAG,GAAIC,KAAK,KAAK5E,KAAK,OAAOkC,UAAU,aAAa2C,YAAaR,EAAWnB,MAAOmB,EAAWS,SAAWC,GAAMxC,KAAKR,MAAMiD,gBAAgBD,EAAE,aAGzJ,kBAAC,MAAD,KACI,kBAAC,MAAD,CAAKJ,EAAG,GAAIzC,UAAU,gBACpB,kBAAC,QAAD,CAAOyC,EAAG,GAAIM,MAAM,cAAcjF,KAAK,SAASkD,MAAOoB,EAAWQ,SAAWC,GAAMxC,KAAKR,MAAMmD,aAAaH,EAAE,cAC3G,4BAAQ7B,MAAM,IAAd,wBACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,UAIR,kBAAC,MAAD,KACI,kBAAC,MAAD,CAAKyB,EAAG,GAAIzC,UAAU,gBACpB,kBAAC,QAAD,CAAOyC,EAAG,GAAIM,MAAM,UAAUjF,KAAK,SAASkD,MAAOqB,EAAcO,SAAWC,GAAMxC,KAAKR,MAAMmD,aAAaH,EAAE,iBAC1G,4BAAQ7B,MAAM,IAAd,wBACA,4BAAQA,MAAM,WAAd,WACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,OAAd,UAIR,kBAAC,MAAD,KACI,kBAAC,MAAD,CAAKyB,EAAG,GAAIzC,UAAU,gBACpB,kBAAC,QAAD,CAAOyC,EAAG,GAAIM,MAAM,kBAAkBjF,KAAK,SAASkD,MAAOwB,EAAWI,SAAWC,GAAMxC,KAAKR,MAAMmD,aAAaH,EAAE,cAC/G,4BAAQ7B,MAAM,IAAd,mBACA,4BAAQA,MAAM,eAAd,eACA,4BAAQA,MAAM,sBAAd,sBACA,4BAAQA,MAAM,sBAAd,qBACA,4BAAQA,MAAM,mBAAd,sBAIR,kBAAC,MAAD,KACI,kBAAC,MAAD,CAAKyB,EAAG,GAAIzC,UAAU,gBACpB,kBAAC,QAAD,CAAOyC,EAAG,GAAIM,MAAM,oBAAoBjF,KAAK,OAAOkD,MAAOsB,EAAcM,SAAWC,GAAMxC,KAAKR,MAAMmD,aAAaH,EAAE,oBAG1H,kBAAC,MAAD,KACI,kBAAC,MAAD,CAAKJ,EAAG,GAAIzC,UAAU,gBACpB,kBAAC,QAAD,CAAOyC,EAAG,GAAIM,MAAM,kBAAkBjF,KAAK,OAAOkD,MAAOuB,EAAiBK,SAAWC,GAAMxC,KAAKR,MAAMmD,aAAaH,EAAE,uBAG3H,kBAAC,MAAD,CAAK7C,UAAU,kBACX,kBAAC,MAAD,CAAKyC,EAAG,IACN,kBAAC,SAAD,CAAQQ,MAAM,QAAQjD,UAAU,QAAQkD,QAAS,IAAM7C,KAAKR,MAAMsD,gBAAlE,SACA,kBAAC,SAAD,CAAQF,MAAM,QAAQjD,UAAU,QAAQkD,QAAS,IAAM7C,KAAKR,MAAMuD,gBAAlE,sBASDnB,Q,qFC9Ff,MAAMoB,UAAoB1D,YACxBC,YAAYC,GACVC,MAAMD,GACNQ,KAAKzC,MAAQ,CACX4C,KAAMH,KAAKR,MAAMW,MAIrB8C,gBAAgBC,GACd,OAAQA,GACN,IAAK,qBACH,OAAOC,IACT,IAAK,cACH,OAAOC,IACT,IAAK,qBACH,OAAOC,IACT,IAAK,kBACH,OAAOC,IACT,QACE,OAAOD,KAIb3D,SACE,IACM6D,EADOvD,KAAKzC,MAAM4C,KACDqD,IAAIC,IAGlB,CACLC,KAHW5C,IAAO2C,EAAOE,WAAWD,MAAM1C,OAAO,MAIjDL,MAAO,yBAAKhB,UAAU,iBAAiBiE,IAAKH,EAAOE,WAAWE,UAAUC,UAAWlE,IAAKI,KAAKiD,gBAAgBQ,EAAOE,WAAWE,UAAUC,aACzIC,QAASN,EAAOE,WAAWK,YAAY3B,KAAK4B,YAC5CC,gBAAiBT,EAAOE,WAAWK,YAAYG,QAAQF,YACvDG,aAAcX,EAAOE,WAAWK,YAAYlF,SAC5CuF,UAAWZ,EAAOE,WAAWW,cAAcjC,KAAK4B,YAChDM,kBAAmBd,EAAOE,WAAWW,cAAcH,QAAQF,YAC3DO,eAAgBf,EAAOE,WAAWW,cAAcxF,YAIpD,OACE,kBAAC,MAAD,CAAKa,UAAU,eACb,kBAAC,MAAD,CAAKyC,EAAG,IACN,qCAEF,kBAAC,IAAD,CACEjC,KAAMoD,EACNkB,QAAS,CACP,CACEC,OAAQ,UACRD,QAAS,CACP,CACEC,OAAQ,OACRC,SAAU,QAEZ,CACED,OAAQ,QACRC,SAAU,WAIhB,CACED,OAAQ,eACRD,QAAS,CACP,CACEC,OAAQ,OACRC,SAAU,WAEZ,CACED,OAAQ,UACRC,SAAU,mBAEZ,CACED,OAAQ,SACRC,SAAU,kBAIhB,CACED,OAAQ,iBACRD,QAAS,CACP,CACEC,OAAQ,OACRC,SAAU,aAEZ,CACED,OAAQ,UACRC,SAAU,qBAEZ,CACED,OAAQ,SACRC,SAAU,qBAKlBC,gBAAiB,GACjBC,qBAAqB,EACrBlF,UAAU,wBAEZ,kBAAC,MAAD,CAAKyC,EAAG,GAAIzC,UAAU,eACpB,kBAAC,SAAD,CAAQiD,MAAM,QAAQkC,KAAK,IAAI/F,KAAMP,iEAAuDwB,KAAKR,MAAMuF,OAAvG,sBAOK/B,QC5GTgC,G,OAAS,IAAI1G,KAEnB,SAAS2G,EAAoBtE,GAC3B,IACIuE,EADAC,EAAUrE,MAASqE,UAEnBtD,EAAc,GACdC,EAAY,GACVsD,GAAO,IAAIvE,MAAOwE,cACxB,OAAQF,GACN,KAAK,EACHtD,EAAcf,IAAOsE,EAAO,UAAUpE,OAAO,MAC7Cc,EAAYhB,IAAOsE,EAAO,UAAUpE,OAAO,MAC3C,MACF,KAAK,EACHa,EAAcf,IAAOsE,EAAO,UAAUpE,OAAO,MAC7Cc,EAAYhB,IAAOsE,EAAO,UAAUpE,OAAO,MAC3C,MACF,KAAK,EACHa,EAAcf,IAAOsE,EAAO,UAAUpE,OAAO,MAC7Cc,EAAYhB,IAAOsE,EAAO,UAAUpE,OAAO,MAC3C,MACF,KAAK,EACHa,EAAcf,IAAOsE,EAAO,UAAUpE,OAAO,MAC7Cc,EAAYhB,IAAOsE,EAAO,UAAUpE,OAAO,MAC3C,MACF,QACE7B,QAAQC,IAAI,kBAIhB,OADA8F,EAAQ,CAAErD,cAAaC,aACT,gBAAVnB,EACKuE,EAAMrD,YAEI,cAAVlB,EACAuE,EAAMpD,eADV,EAKP,MAAMwD,UAAgBhG,YACpBC,YAAYC,GACVC,MAAMD,GACNQ,KAAKzC,MAAQ,CACXsE,YAAaoD,EAAoB,eACjCnD,UAAWmD,EAAoB,aAC/BlD,UAAW,GACXC,aAAc,GACdC,aAAc,GACdC,gBAAiB,GACjBC,UAAW,GACXoD,QAAQ,EACRpF,KAAM,GACN4E,MAAO,IAET/E,KAAKyC,gBAAkBzC,KAAKyC,gBAAgB+C,KAAKxF,MACjDA,KAAK2C,aAAe3C,KAAK2C,aAAa6C,KAAKxF,MAC3CA,KAAK8C,aAAe9C,KAAK8C,aAAa0C,KAAKxF,MAC3CA,KAAK+C,aAAe/C,KAAK+C,aAAayC,KAAKxF,MAG7CyC,gBAAgBgD,EAAOhI,GACrBgI,EAAMC,iBACN,IAAIhC,EAAO+B,EAAME,OAAOhF,MACX,KAAT+C,IACFA,EAAOA,EAAKpD,MAAM,MACb,GAAKoD,EAAK,GAAGrD,MAAM,GAAI,GAC5BqD,EAAOA,EAAK,GAAK,IAAMA,EAAK,GAAK,KAAOA,EAAK,IAG7CA,EAAO,GAGI,YAATjG,EACFuC,KAAK4F,SAAS,CACZ/D,YAAa6B,IAGC,UAATjG,GACPuC,KAAK4F,SAAS,CACZ9D,UAAW4B,IAKjBf,aAAa8C,EAAOhI,GAClBgI,EAAMC,iBACN,IAAMG,EAAQJ,EAAME,OAAOhF,MAE3B,OAAQlD,GACN,IAAK,YACHuC,KAAK4F,SAAS,CACZ7D,UAAW8D,IAEb,MACF,IAAK,eACH7F,KAAK4F,SAAS,CACZ5D,aAAc6D,IAEhB,MACF,IAAK,QACH7F,KAAK4F,SAAS,CACZE,MAAOD,IAET,MACF,IAAK,eACH7F,KAAK4F,SAAS,CACZ3D,aAAc4D,IAEhB,MACF,IAAK,kBACH7F,KAAK4F,SAAS,CACZ1D,gBAAiB2D,IAEnB,MACF,IAAK,YACH7F,KAAK4F,SAAS,CACZzD,UAAW0D,IAEb,MACF,QACE1G,QAAQC,IACN,+BACA,kBAAoB3B,EAAO,KAC3B,mBAAqBoI,IAK7B/C,eACE9C,KAAK4F,SAAS,CACZ/D,YAAaoD,EAAoB,eACjCnD,UAAWmD,EAAoB,aAC/BlD,UAAW,GACXC,aAAc,GACdC,aAAc,GACdC,gBAAiB,GACjBC,UAAW,GACXoD,QAAQ,EACRpF,KAAM,KAERH,KAAK+C,eAGPA,eACE/C,KAAK4F,SAAS,CACZL,QAAQ,IAFG,MAcTvF,KAAKzC,MARPsE,EANW,EAMXA,YACAC,EAPW,EAOXA,UACAC,EARW,EAQXA,UACAC,EATW,EASXA,aACAC,EAVW,EAUXA,aACAC,EAXW,EAWXA,gBACAC,EAZW,EAYXA,UAKE4C,GAjBS,EAaXQ,OAIU,IAgDZ,MA9CoB,KAAhB1D,IACY,KAAVkD,IACFA,GAAS,KAEXA,GAAS,QAAUjE,IAAOe,GAAab,OAAO,eAE9B,KAAdc,IACY,KAAViD,IACFA,GAAS,KAEXA,GAAS,MAAQjE,IAAOgB,GAAWd,OAAO,eAE1B,KAAde,IACY,KAAVgD,IACFA,GAAS,KAEXA,GAAS,aAAehD,GAEN,IAAhBC,IACY,KAAV+C,IACFA,GAAS,KAEXA,GAAS,gBAAkB/C,GAET,IAAhBC,IACY,KAAV8C,IACFA,GAAS,KAEXA,GAAS,gBAAkB9C,GAEN,IAAnBC,IACY,KAAV6C,IACFA,GAAS,KAEXA,GAAS,mBAAqB7C,GAEf,IAAbC,IACY,KAAV4C,IACFA,GAAS,KAEXA,GAAS,SAAW5C,GAEtBnC,KAAK4F,SAAS,CACZb,MAAOA,IAGFxG,MAAM,GAAD,OAjDCC,oDAiDD,kBAAkBuG,GAAS,CACrCtG,OAAQ,QAEPC,KAAKC,GAAYA,EAASC,QAC1BF,KAAKiF,IACJ3D,KAAK4F,SAAS,CACZzF,KAAMwD,EACN4B,QAAQ,MAGXtG,MAAOL,IACNO,QAAQC,IAAI,8CAIlB2G,iCAC8BC,IAAxBhB,EAAOiB,IAAI,UACb5H,IAEF2B,KAAK+C,eAGPrD,SACE,OAA0B,IAAtBM,KAAKzC,MAAMgI,OAEX,6BACE,kBAAC,cAAD,OAIoC,WAAjCP,EAAOiB,IAAI,SAASC,SACnB,kBAAC,IAAD,CAAUC,GAAG,MAInB,6BACE,kBAAC,MAAD,CAAKxG,UAAU,iBACb,kBAAC,MAAD,CAAKyC,EAAG,IACN,uCAGJ,kBAAC,MAAD,KACE,kBAAC,MAAD,CAAKA,EAAG,GAAIgE,EAAG,GACb,kBAAC,EAAD,CAAS3D,gBAAiBzC,KAAKyC,gBAAiBE,aAAc3C,KAAK2C,aAAcxC,KAAMH,KAAKzC,MAAOuF,aAAc9C,KAAK8C,aAAcC,aAAc/C,KAAK+C,gBAEzJ,kBAAC,MAAD,CAAKX,EAAG,GAAIgE,EAAG,GACb,kBAAC,EAAD,CAAajG,KAAMH,KAAKzC,MAAM4C,KAAM4E,MAAO/E,KAAKzC,MAAMwH,MAAOhC,aAAc/C,KAAK+C,mBAS/EuC,Q,gCChRFe,EAA6B,CACtCC,IAAK,CACDjE,KAAM,eACNkE,OAAQ,wBAEZC,OAAQ,CACJnE,KAAM,mBACNkE,OAAQ,qBAEZE,KAAM,CACFpE,KAAM,OACNkE,OAAQ,+BAEZG,KAAM,CACFrE,KAAM,aACNkE,OAAQ,+BAEZI,QAAS,CACLtE,KAAM,UACNkE,OAAQ,mC,wGCTVK,GAAa,CACfN,IAAKA,IACLG,KAAMA,KACNE,QAASA,KACTH,OAAQA,KACRE,KAAMA,MA8BKG,OA3Bf,UAAsB,kBAAEC,IACpB,IAAKA,EACD,OAAO,KAGX,IAAMC,EAAcD,EAAkBE,MAChCC,EAASC,OAAOC,KAAKP,IAAYpD,IAAK4D,GACxC,yBAAKzH,UAAU,kBAAkB0H,IAAG,wBAAmBD,IACnD,yBACIxD,IAAG,gBAAWwD,EAAX,UACHzH,WAA2C,IAAhCoH,EAAY9I,QAAQmJ,GAAgB,2BAA6B,cAC5ExH,IAAKgH,GAAWQ,KAEpB,yBAAKzH,UAAU,WACX,8BAAO0G,EAA2Be,GAAO/E,KAAzC,MAAwDgE,EAA2Be,GAAOb,UAKtG,OACI,yBAAK5G,UAAU,0BACX,uBAAGA,UAAU,SAAb,mBACCsH,I,yPCtBPK,GAAY,CAChBC,QAASA,KACTC,WAAYA,KACZC,KAAMA,KACNC,OAAQA,KACRC,OAAQA,KACRC,KAAMA,KACNC,SAAUA,KACVC,YAAaA,KACbC,YAAaA,KACbC,MAAOA,KACPC,QAASA,KACTC,SAAUA,MAYGC,OATf,UAAgB,MAAEC,EAAF,MAASC,EAAT,MAAgBC,IAC5B,OACI,yBAAK3I,UAAU,mBACX,uBAAGA,UAAU,SAAS2I,EAAtB,KAA8B,0BAAM3I,UAAU,SAASyI,IACvD,yBAAKzI,UAAU,cAAcC,IAAK0H,GAAUe,O,OCDzCE,OAjCf,UAAuB,YAAEC,EAAF,aAAeC,EAAf,UAA6BC,IAChD,OAAoB,IAAhBF,EAEI,yBAAK7I,UAAU,WACX,uBAAGA,UAAU,iBAAgB,kDAA7B,qDAsBR,yBAAKA,UAAU,WAjB0B,YAAjB8I,GAA+C,eAAjBA,EACtD,kBAAC,IAAME,SAAP,KACI,uBAAGhJ,UAAU,QAAb,0BACA,uBAAGA,UAAU,iBAAiB8I,EAA9B,WAEJ,GAGA,kBAAC,IAAME,SAAP,KACI,uBAAGhJ,UAAU,SAAS6I,GACtB,uBAAG7I,UAAU,QAAQ6I,EAAc,EAAI,sBAAwB,sBAC/D,uBAAG7I,UAAU,cAAb,UAA8B+I,EAA9B,c,OC2BGE,OA5Cf,UAA0B,kBAAE9B,IACxB,IAAKA,EACD,OACI,yBAAKnH,UAAU,oBACX,kBAAC,cAAD,OAKZ,IAAMkJ,EAAc/B,EAAkBG,OAAO6B,QACvCC,EAAajC,EAAkBG,OAAO+B,OACtCC,EAAkBnC,EAAkBoC,WAAWJ,QAC/CK,EAAiBrC,EAAkBoC,WAAWF,OAEpD,OACI,yBAAKrJ,UAAU,oBACX,yBAAKA,UAAU,yBACX,kBAAC,GAAD,CACIyI,MAAOS,EAAYT,MACnBC,MAAOQ,EAAYR,MACnBC,MAAM,iBAEV,kBAAC,GAAD,CACIE,YAAaS,EAAgBb,MAC7BK,aAAcI,EAAYR,MAC1BK,UAAWO,EAAgBG,QAGnC,yBAAKzJ,UAAU,yBACX,kBAAC,GAAD,CACIyI,MAAOW,EAAWX,MAClBC,MAAOU,EAAWV,MAClBC,MAAM,oBAEV,kBAAC,GAAD,CACIE,YAAaW,EAAef,MAC5BK,aAAcM,EAAWV,MACzBK,UAAWS,EAAeC,UCzCxCpL,GAAS,IAAIM,I,OCkCJ+K,OA5Bf,WAAqB,IAAD,EACkCC,mBAAS,MAD3C,mBACTxC,EADS,KACUyC,EADV,KAGVC,EAAa,uCAAG,4BAAAC,EAAA,sEDLflL,MAAM,GAAD,OAHHC,oDAGG,8BAA8BR,GAAOiI,IAAI,SAASyD,UAAY,CACtEC,QAAS,CACL,OAAU,mBACV,cAAgB,UAAhB,OAA2B3L,GAAOiI,IAAI,SAAS2D,OAC/C,eAAgB,oBAEpBnL,OAAQ,QACTC,KAAKC,GAAYA,EAASC,QAC5BF,KAAKmL,GAAcA,GACnB5K,MAAO6K,GAAU3K,QAAQC,IAAI,wDAAyD0K,EAAMC,UCJvE,OACZC,EADY,OAElBT,EAAqBS,GAFH,2CAAH,qDASnB,OAJAC,oBAAU,KACNT,KACF,IAGE,yBAAK7J,UAAU,aACX,yBAAKA,UAAU,eACX,uDACA,kBAAC,IAAD,CAAMwG,GAAG,aACL,kBAAC,SAAD,CAAQvD,MAAM,SAAd,kBAGR,yBAAKjD,UAAU,kBACX,kBAAC,GAAD,CAAiBmH,kBAAmBA,IACpC,kBAAC,GAAD,CAAaA,kBAAmBA,O,SCFjCoD,GAxBE,IAAyD,IAAvDC,EAAsD,EAAtDA,QAASC,EAA6C,EAA7CA,SAA6C,IAAnCrL,YAAmC,MAA5B,GAA4B,EAAxB8D,EAAwB,EAAxBA,QAAYrD,EAAY,wDACvE,GAAI2K,EAAS,OAAO,wBAAIxK,UAAU,YAClC,IAAM8J,EAAI5G,EACR,uBAAGA,QAASA,GAAUuH,GAEtB,kBAAC,IAAD,CAAMjE,GAAIpH,GAAOqL,GAEnB,OAAO,uBAAQ5K,EAAQiK,I,6BCDnBrE,IAAO,IAAIvE,MAAOwE,cAET,MAAMgF,WAAqB/K,YAExCC,YAAYC,GACVC,MAAMD,GACNQ,KAAKsK,aAAetK,KAAKsK,aAAa9E,KAAKxF,MAG7CsK,aAAapH,GACX,OAAQA,GACN,IAAK,gBACH,OAAOE,IACT,IAAK,cACH,OAAOD,IACT,IAAK,cACH,OAAOE,IACT,IAAK,kBACH,OAAOC,IACT,QACE,OAAOD,KAIbkH,WAAW9M,EAAK+M,GACd,IACMC,EAAU,UADHjM,oDACG,yBAA2BgM,GAC3C,GAAuB,aAApBxK,KAAKR,MAAM/B,KACZ,MAAY,OAATA,EACM,wBAAIkC,UAAU,UAAU+K,aAAW,WAAnC,WAEF,wBAAI/K,UAAU,WAAU,uBAAGZ,KAAM0L,GAAY,uBAAGE,MAAM,kBAAT,kBAGxDjL,SAEE,OAAiC,IAA7BM,KAAKR,MAAMoL,OAAOpK,OAElB,yBAAKb,UAAU,aACQ,UAApBK,KAAKR,MAAM/B,KAAmB,oEAA+B,8BAAO2H,KAAoB,uEAAkC,8BAAOA,KAClI,yBAAKxF,IAAKiL,KAAWjH,IAAI,WAM7B,6BACE,kBAAC,QAAD,CAAOjE,UAAU,eACf,+BACE,4BACE,wBAAIA,UAAU,OAAO+K,aAAW,QAAhC,QACqB,UAApB1K,KAAKR,MAAM/B,KAAmB,wBAAIkC,UAAU,OAAO+K,aAAW,QAAhC,WAAsD,wBAAIA,aAAW,QAAf,aACrF,wBAAI/K,UAAU,QAAQ+K,aAAW,SAAjC,SACA,wBAAI/K,UAAU,SAAS+K,aAAW,UAAlC,UACC1K,KAAKuK,WAAW,QAGrB,+BACGvK,KAAKR,OAASQ,KAAKR,MAAMoL,QAAU5K,KAAKR,MAAMoL,OAAOpH,IAAIsH,GACxD,wBAAIzD,IAAKyD,EAAKC,KACZ,wBAAIpL,UAAU,QAAQmB,IAAO,IAAID,KAAKiK,EAAKnH,WAAWD,OAAO1C,OAAO,kBAC/C,UAApBhB,KAAKR,MAAM/B,KAAmB,wBAAIkC,UAAU,QAAQmL,EAAKnH,WAAWK,YAAY3B,KAAK4B,aAAoB,wBAAItE,UAAU,QAAQmL,EAAKnH,WAAWW,cAAcjC,KAAK4B,aACnK,wBAAItE,UAAU,SAAQ,yBAAKA,UAAU,aAAaiE,IAAKkH,EAAKnH,WAAWE,UAAUC,UAAWlE,IAAKI,KAAKsK,aAAaQ,EAAKnH,WAAWE,UAAUC,cAC7I,wBAAInE,UAAU,UAAUmL,EAAKnH,WAAWE,UAAUmH,QACjDhL,KAAKuK,WAAW,KAAKO,EAAKC,W,OCrE5B,MAAME,WAAqB3L,YAExCI,SACE,OACE,kBAAC,MAAD,CAAKC,UAAU,kBACb,kBAAC,MAAD,CAAKyC,EAAG,GAAIgE,EAAG,IACb,kBAAC,OAAD,CAAMzG,UAAU,yBACd,kBAAC,MAAD,CAAK2I,MAAM,QAAQ4C,QAAM,GACvB,kBAAC,MAAD,CAAKvL,UAAU,iBACb,kBAAC,MAAD,CAAKyC,EAAG,GAAIgE,EAAG,IACb,kBAAC,GAAD,CAAcwE,OAAQ5K,KAAKR,MAAM2L,KAAM1N,KAAM,aAInD,kBAAC,MAAD,CAAK6K,MAAM,YACT,kBAAC,MAAD,CAAK3I,UAAU,iBACb,kBAAC,MAAD,CAAKyC,EAAG,GAAIgE,EAAG,IACb,kBAAC,GAAD,CAAcwE,OAAQ5K,KAAKR,MAAM4L,SAAU3N,KAAM,oBChBnE,IAAMO,GAAS,IAAIM,IAEnB,MAAM+M,WAAmB/L,YAEvBC,YAAYC,GACVC,MAAMD,GACNQ,KAAKzC,MAAQ,CACX+N,iBAAkB,GAClBC,qBAAsB,GACtBC,aAAa,GAEfxL,KAAKyL,UAAYzL,KAAKyL,UAAUjG,KAAKxF,MACrCA,KAAK0L,UAAY1L,KAAK0L,UAAUlG,KAAKxF,MAGvCyL,YAEElN,MAAM,GAAD,OADQC,oDACR,UACFE,KAAKC,GAAYA,EAASC,QAC1BF,KAAKyB,IACJ,IAAIoL,EAAuBpL,EAAKwL,OAAOJ,GAAwB,UAAGA,EAAqB5H,WAAWK,YAAY3B,KAAKuJ,KAApD,qBAA8E5N,GAAOiI,IAAI,SAAS4F,OAC7JP,EAAmBnL,EAAKwL,OAAOL,GAAoB,UAAGA,EAAiB3H,WAAWW,cAAcjC,KAAKuJ,KAAlD,qBAA4E5N,GAAOiI,IAAI,SAAS4F,OACvJ7L,KAAK4F,SAAS,CACZ2F,uBACAD,mBACAE,aAAa,MAIrBE,YACE1L,KAAK4F,SAAS,CACZ0F,iBAAkB,GAClBC,qBAAsB,GACtBC,aAAa,IAIjB9L,SAAU,IAAD,EAC0DM,KAAKzC,MAA9DiO,EADD,EACCA,YAAaF,EADd,EACcA,iBAAkBC,EADhC,EACgCA,qBAEvC,OACI,kBAAC,QAAD,CACEf,GAAG,aACHsB,OAAO,SACPC,aAAc,CAAEC,MAAOhM,KAAKyL,UAAWQ,SAAUjM,KAAK0L,WACtDQ,QAAS,kBAAC,GAAD,qBACRV,EAAc,kBAAC,GAAD,CAAcL,KAAMG,EAAkBF,SAAUG,IAA2B,kBAAC,MAAD,SAAM,kBAAC,MAAD,CAAKnJ,EAAG,IAAR,IAAa,kBAAC,cAAD,MAAb,KAAN,OAMrFiJ,U,oBCjDTrN,I,OAAS,IAAIM,KAEb6N,GAAgB,EAAGpN,OAAMqL,cAAgB,4BAAI,kBAAC,IAAD,CAAMjE,GAAKpH,GAASqL,IA2DxDgC,OAzDf,WAAmB,IAAD,EACoB9C,mBAAS,IAD7B,mBACP+C,EADO,KACIC,EADJ,KAGdrC,oBAAU,KACNqC,EAAatO,GAAOiI,IAAI,WACzB,IAEH,IAAMsG,EACF,kBAAC,IAAD,CAAMpG,GAAG,KACL,yBAAKpH,KAAK,IAAIY,UAAU,OAAOC,IAAK4M,QAmC5C,OACI,kBAAC,SAAD,CAAQC,MAAOF,EAAMG,OAAK,EAAC/M,UAAU,kBACjC,kBAACwM,GAAD,CAAepN,KAAK,KAChB,kBAAC,OAAD,cAEJ,kBAACoN,GAAD,CAAepN,KAAK,aAApB,YACA,kBAAC,GAAD,MApCJsN,GAAoC,UAAvBA,EAAUnG,SACnB,kBAACiG,GAAD,CAAepN,KAAK,UAApB,SACE,KASN,kBAAC,WAAD,CAAUmN,QACN,kBAAC,UAAD,CAASvM,UAAU,gBACd0M,GAAaA,EAAUhK,KACxB,uBAAG1C,UAAU,wBAAb,yBAGJ,wBAAIA,UAAU,QACV,uBAAGZ,KAAK,iFAAiF4G,OAAO,UAAhG,OACQ,uBAAGhG,UAAU,wBAAb,UAGZ,wBAAIA,UAAU,WAAWkD,QAAU4C,GAlBnBA,KACpBA,EAAMC,iBACN1H,GAAO2O,OAAO,QAAS,CAAEzL,KAAM,MAC/B7C,KAeiDuO,CAAenH,IACxD,uCACa,uBAAG9F,UAAU,wBAAb,2B,OCrBdkN,OA1Bf,UAAqB,SAAEC,IAEnB,OACI,yBAAKnN,UAAU,qBACX,kBAAC,SAAD,CACIA,UAAU,6BACV6K,GAAG,WACHnD,IAAI,WACJxE,QAAS,IAAMiK,EAAS,YACxBlK,MAAM,SALV,mCASA,kBAAC,SAAD,CACIjD,UAAU,gBACV6K,GAAG,OACHnD,IAAI,OACJxE,QAAS,IAAMiK,EAAS,QACxBlK,MAAM,SALV,YCjBCmK,GAAqB,CAC9B,YAAe,YACf,mBAAsB,cACtB,mBAAsB,iBACtB,gBAAmB,a,OCoCRC,OAlCf,UAAgB,iBACZC,EADY,cAEZC,EAFY,WAGZC,IAEA,GAAIC,MAAMC,QAAQF,IAAqC,IAAtBA,EAAW3M,OAA5C,CAIA,IAAM8M,EAAYH,EAAW3J,IAAK7C,IAC9B,IChB6B4M,EDgBvBC,EAAU,gBAAY7M,IAAUuM,EAAV,iBAAoCH,GAAmBpM,IAAW,iBAE9F,OACI,kBAAC,SAAD,CACIhB,UAAW6N,EACXhD,GAAI7J,EACJ0G,IAAG,uBAAkB1G,GACrBkC,QAAU4C,GAAUwH,EAAiBxH,EAAME,OAAOhF,OAClDA,MAAOA,EACPiC,MAAM,UCzBe2K,ED2BC5M,GCzBvB4M,EAAM7M,QAAQ,MAAO,KAAKA,QAAQ,SAAW+M,GAAQA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,OAAO,GAAGC,eAGrG,MD2BP,OACI,yBAAKlO,UAAU,oBACX,uBAAGA,UAAU,SAAb,kBACC2N,KEnCAQ,GAAS,CAClB,cACA,qBACA,qBACA,mBAGSC,GAAsB,CAC/BhE,QAAS,CACLD,MAAO,KACPkE,OAAO,GAEXC,YAAa,CACTnE,MAAO,KACPkE,OAAO,ICZThQ,GAAS,IAAIM,IACb4P,GAAO1P,oDAGN,SAAe2P,GAAtB,uC,8CAAO,WAA8BF,EAAalE,EAASmD,GAApD,SAAAzD,EAAA,+EAEIlL,MAAM,GAAD,OAAI2P,GAAJ,SAAiB,CACzBzP,OAAQ,OACRkL,QAAS,CACT,OAAU,mBACV,eAAgB,mBAChB,cAAgB,GAAhB,OAAoB3L,GAAOiI,IAAI,SAAS2D,QAExCwE,KAAMC,KAAKC,UAAU,CACjB,WAAc,CACV,UAAa,CACT,UAAapB,EACb,OAAUnD,GAEd,YAAe,CACX,KAAQkE,MAIpBM,KAAM,SACP7P,KAAMC,GAAiC,MAApBA,EAAS6P,QAC9BvP,MAAO6K,GAAU3K,QAAQC,IAAI,iDAAkD0K,EAAMC,WAtBnF,4C,sBA0BA,SAAe0E,GAAtB,mC,8CAAO,WAA6B5C,GAA7B,iBAAApC,EAAA,6DACGiF,EAAe7C,EAAMgC,cADxB,SAGkBtP,MAAM,GAAD,OAAI2P,GAAJ,iBAAiBQ,GAAgB,CACvDjQ,OAAQ,MACRkL,QAAS,CACT,OAAU,mBACV,eAAgB,mBAChB,cAAgB,GAAhB,OAAoB3L,GAAOiI,IAAI,SAAS2D,QAExC2E,KAAM,SACP7P,KAAMC,GAAaA,EAAS6P,QAC9BvP,MAAO6K,GAAU3K,QAAQC,IAAI,2CAA4C0K,EAAMC,UAZ7E,OAGGyE,EAHH,YAcIA,EAdJ,OAeM,MAfN,OAiBM,MAjBN,OAmBM,MAnBN,gDAgBY,EAAC,EAAM,KAhBnB,gCAkBY,EAAC,EAAOG,GAAe,cAlBnC,gCAoBY,EAAC,EAAOA,GAAe,mBApBnC,iCAsBY,EAAC,EAAO,mBAtBpB,6C,sBA0BA,IAIMA,GAAkB,CAC3B,YAAe,qEACf,QAAW,yDACX,iBAAoB,sEACpB,eAAkB,mHAITC,GAAgB,CACzB,YAAc,WAAd,4BAAe,WAAO/C,GAAP,SAAApC,EAAA,sEAAuBgF,GAAc5C,GAArC,mFAAf,mDAAc,GACd,QAAY9B,IAAY8E,OAdI9E,EAcYA,GAbhCvJ,QAAU,GAAKuJ,EAAQvJ,QAAS,IAAM,EAAC,EAAM,IAAM,EAAC,EAAOmO,GAAe,SADtD5E,Q,OCgEjB+E,OAlHf,UAAwB,QAAExN,IAAY,IAAD,EACHgI,mBAAS,IADN,mBAC1BS,EAD0B,KACjBgF,EADiB,OAEKzF,mBAAS,IAFd,mBAE1B2E,EAF0B,KAEbe,EAFa,OAGS1F,mBAAS,eAHlB,mBAG1B4D,EAH0B,KAGX+B,EAHW,OAIG3F,mBAASyE,IAJZ,mBAI1BmB,EAJ0B,KAIdC,EAJc,KAa3BC,EAAU,uCAAG,WAAO5E,EAAI7J,GAAX,qBAAA8I,EAAA,yDACD,KAAV9I,EADW,wDAKT0O,EALS,eAKSH,GALT,SAMUN,GAAcpE,GAAI7J,GAN5B,gDAMsC,EAAC,EAAO,0CAN9C,OAMT2O,EANS,KAOTC,EAAiBD,EAAW,GAC5BE,EAAeF,EAAW,GAEhCpI,OAAOuI,OAAOJ,EAAY,CACtB,CAAC7E,GAAK,CACFV,MAAO0F,EACPxB,MAAOuB,KAGfJ,EAAcE,GAhBC,4CAAH,wDAmBVvC,EAAQ,uCAAG,WAAO4C,GAAP,SAAAjG,EAAA,0DACOkG,IADP,gCAIyBxB,GAAeF,EAAalE,EAASmD,GAJ9D,gBAMLrO,OAAO+Q,YAAYC,MACf,6FACA,IACA,iBAGQ,SAAXH,EAAqBpO,EAAQC,KAAK,MArC3CwN,EAAW,IACXC,EAAe,IACfC,EAAiB,eACjBE,EAAcpB,MAsBD,2CAAH,sDAiBR4B,EAAe,KACjB,IAAIG,GAAc,EAgBlB,OAdA5I,OAAOC,KAAK+H,GAAYa,QAASC,IACzBd,EAAWc,GAAOhC,QAClB8B,GAAc,KAIjBA,GACDjR,OAAO+Q,YAAYC,MACf,kIACA,IACA,cAIDC,GAGX,OACI,yBAAKnQ,UAAU,mBACX,yBAAKA,UAAU,qBACX,+CAEJ,yBAAKA,UAAU,6BACX,kBAAC,GAAD,CACIsN,iBAAkBgC,EAClB/B,cAAeA,EACfC,WAAYW,KAEhB,yBAAKnO,UAAU,oBACX,yBAAKA,UAAU,eACX,kBAAC,QAAD,CACI6K,GAAG,cACHV,MAAOoF,EAAU,YAAgBpF,MACjCpH,MAAM,iBACNuN,OAASxK,GAAU2J,EAAW3J,EAAME,OAAO6E,GAAI/E,EAAME,OAAOhF,OAC5D4B,SAAWkD,GAAUuJ,EAAevJ,EAAME,OAAOhF,OACjD2B,YAAY,QACZ7E,KAAK,OACLkD,MAAOsN,GAEP,oDAGR,kBAAC,QAAD,CACIzD,GAAG,UACHV,MAAOoF,EAAU,QAAYpF,MAC7BpH,MAAM,gCACNwN,UAAU,MACVD,OAASxK,GAAU2J,EAAW3J,EAAME,OAAO6E,GAAI/E,EAAME,OAAOhF,OAC5D4B,SAAWkD,GAAUsJ,EAAWtJ,EAAME,OAAOhF,OAC7ClD,KAAK,WACLkD,MAAOoJ,IAEX,kBAAC,GAAD,CACI+C,SAAUA,Q,OCpGnBqD,OAXf,UAAuB,SAAErR,IAErB,OACI,6BACI,4BACI,wCAAa,8BAAOA,EAASsR,UAA7B,kBC8BDC,OAvBf,WAKI,OAJApG,oBAAU,KACN5L,KACF,IAGE,kBAAC,IAAD,CAAeiS,SCrBH9R,wBDsBR,yBAAKmB,UAAU,OACX,kBAAC,GAAD,MACA,yBAAK6K,GAAG,eACJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO+F,OAAK,EAACrP,KAAK,IAAIsP,UAAWnH,KACjC,kBAAC,IAAD,CAAOkH,OAAK,EAACrP,KAAK,QAAQsP,UAAWnR,IACrC,kBAAC,IAAD,CAAOkR,OAAK,EAACrP,KAAK,SAASsP,UAAWlL,IACtC,kBAAC,IAAD,CAAOiL,OAAK,EAACrP,KAAK,YAAYsP,UAAW1B,KACzC,kBAAC,IAAD,CAAO0B,UAAWL,UEpBpCM,GAAcC,QACW,cAA7B7R,OAAOC,SAAS6R,UAEe,UAA7B9R,OAAOC,SAAS6R,UAEhB9R,OAAOC,SAAS6R,SAASC,MACvB,2DA6BN,SAASC,GAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTpS,KAAKwS,IACJA,EAAaC,cAAgB,KAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,KACA,cAA3BF,EAAiB7T,QACfwT,UAAUC,cAAcO,WAK1BpS,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBH,MAAM6K,IACL3K,QAAQ2K,MAAM,4CAA6CA,K,WC7D3D0H,GAAQC,YAAYtT,GAE1BuT,IAAShS,OACL,kBAAC,IAAD,CAAU8R,MAAOA,IACb,kBAAC,GAAD,OAGJzT,SAAS4T,eAAe,SDIb,WACb,GAA6C,kBAAmBZ,UAAW,CAGzE,GADkB,IAAIa,IAAIpT,uBAAwBK,OAAOC,UAC3C+S,SAAWhT,OAAOC,SAAS+S,OAIvC,OAGFhT,OAAOiT,iBAAiB,OAAQ,KAC9B,IAAMhB,EAAK,UAAMtS,uBAAN,sBAEPiS,GAwCV,SAAiCK,GAE/BvS,MAAMuS,GACHpS,KAAKC,IAGkB,MAApBA,EAAS6P,SACuD,IAAhE7P,EAASgL,QAAQ1D,IAAI,gBAAgBhI,QAAQ,cAG7C8S,UAAUC,cAAchF,MAAMtN,KAAKwS,IACjCA,EAAaa,aAAarT,KAAK,KAC7BG,OAAOC,SAASkT,aAKpBnB,GAAgBC,KAGnB7R,MAAM,KACLE,QAAQC,IACN,mEA5DA6S,CAAwBnB,GAGxBD,GAAgBC,MCrBxBoB,M","file":"static/js/main.d8a5c634.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BEINSERVICE.d4c992ef.svg\";","module.exports = __webpack_public_path__ + \"static/media/BEAUTHENTIC.565e2aab.svg\";","module.exports = __webpack_public_path__ + \"static/media/BEACCOUNTABLE.75b15c47.svg\";","module.exports = __webpack_public_path__ + \"static/media/BRINGEXCELLENCE.ab488dbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader.21047612.gif\";","module.exports = __webpack_public_path__ + \"static/media/ace.457b7377.svg\";","module.exports = __webpack_public_path__ + \"static/media/club.c24453be.svg\";","module.exports = __webpack_public_path__ + \"static/media/diamond.6dae57f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/novice.e7cc67c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/star.50a147db.svg\";","module.exports = __webpack_public_path__ + \"static/media/blue.04e1f1cc.svg\";","module.exports = __webpack_public_path__ + \"static/media/bronze.8226a1de.svg\";","module.exports = __webpack_public_path__ + \"static/media/captain.10fd8b72.svg\";","module.exports = __webpack_public_path__ + \"static/media/champion.df2bd9d4.svg\";","module.exports = __webpack_public_path__ + \"static/media/cheerleader.9d0a97e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/coach.804d9634.svg\";","module.exports = __webpack_public_path__ + \"static/media/contributor.c4067768.svg\";","module.exports = __webpack_public_path__ + \"static/media/gold.77041fd4.svg\";","module.exports = __webpack_public_path__ + \"static/media/noGiven.20db2b58.svg\";","module.exports = __webpack_public_path__ + \"static/media/noReceived.4f4e359d.svg\";","module.exports = __webpack_public_path__ + \"static/media/silver.66244126.svg\";","module.exports = __webpack_public_path__ + \"static/media/platinum.3b61e9e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/medalGray.3824d0c5.png\";","module.exports = __webpack_public_path__ + \"static/media/apex-logo.5884363c.svg\";","/* Simple utility to clean up reducer files */\n\nconst createReducer = (handlers = {}, initialState = {}) => {\n    return (state = initialState, action) => {\n        if (typeof handlers[action.type] === 'function') {\n            return handlers[action.type](state, action);\n        }\n        return state;\n    };\n};\n\nexport default createReducer;\n","const ACTIONS_NAMES = {\n    USER_LOGGED: 'USER_LOGGED',\n};\n\nconst ACTION_CREATORS = {\n    userLogged() {\n        return {\n            type: ACTIONS_NAMES.USER_LOGGED\n        };\n    }\n};\n\nexport default {...ACTIONS_NAMES, ...ACTION_CREATORS};\n","import createReducer from '../utils/createReducer';\nimport actions from '../actions';\n\nconst initialState = {\n    isUserLogged: document.cookie.indexOf('login=') !== -1 ?  true : false\n};\n\nconst actionHandlers = {\n    [actions.USER_LOGGED]:(state) => {\n        return {\n            ...state,\n            isUserLogged: true\n        }\n    },\n};\n\nexport default createReducer(actionHandlers, initialState);\n","import { combineReducers } from 'redux';\nimport login from './login';\n\nconst reducers = combineReducers({\n    login\n});\n\nexport default reducers;\n","import moment from 'moment';\nimport Cookies from 'universal-cookie';\n\nconst cookie = new Cookies();\nconst host = process.env.REACT_APP_BACKEND_HOST;\n\nexport const login = () => document.cookie.indexOf('login=') === -1 ? (\n        fetch(`${host}/auth/`,{ method: 'GET' })\n       .then(response => response.json())\n       .then(response => window.location.href = response.authurl)\n       .catch((err) => console.log(\"Error trying to log, please try again\",err))\n) : null;\n\nexport const setCookie = (value) => {\n    const DATE = new Date(moment().add(1,'hour').format());\n    cookie.set(\"login\", value, { path: '/' , expires: DATE });\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport { setCookie } from '../../utils/login';\nimport actions from '../../actions';\n\nimport loader from '../../assets/images/loader.gif';\nimport './auth.css';\n\nconst mapStateToProps = (state => {\n  return {\n    isUserLogged: state.login.isUserLogged\n  }\n});\n\nconst mapDispatchToProps = (dispatch => {\n  return { actions: bindActionCreators(actions, dispatch), dispatch }\n});\n\nclass Auth extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className=\"loader\">\n        <img src={loader} />\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    const {location, actions: {userLogged} } = this.props; \n    const url = location.search;\n    var hash;\n    var data = {};\n    var hashes = url.slice(url.indexOf('?') + 1).split('&');\n    for (let i = 0; i < hashes.length; i++) {\n      hash = hashes[i].split('=');\n      if (hash[0] == 'name') {\n        hash[1] = decodeURI(hash[1]);\n      }\n      else if (hash[0] == 'email') {\n        hash[1] = hash[1].replace('%40', '@');\n      } else if (hash[0] == 'usertype') {\n        hash[1] = decodeURI(hash[1]);\n      }\n      data[hash[0]] = hash[1];\n    }\n    setCookie(data);\n    userLogged();\n    setTimeout( this.props.history.push('/'), 10000);\n  }\n}\n\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Auth));\n","import React, { Component } from 'react'\nimport { Row, Col, Input, Button } from 'react-materialize'\nimport './filters.css';\n\nclass Filters extends Component {\n\n  constructor(props) {\n    super(props);\n      this.state = {\n        initialDate: this.props.data.initialDate,\n        finalDate: this.props.data.finalDate,\n        cityGiven: this.props.data.cityGiven,\n        cityReceived: this.props.data.cityReceived,\n        managerGiven: this.props.data.managerGiven,\n        managerReceived: this.props.data.managerReceived,\n        corevalue: this.props.data.corevalue\n      };\n  }\n\n  render() {\n    const {\n      initialDate,\n      finalDate, \n      cityGiven,\n      cityReceived,\n      managerGiven,\n      managerReceived,\n      corevalue \n    } = this.props.data;\n\n    return (\n      <div>  \n        <Row className=\"filters\">\n          <Col s={12}>\n            <h1>Filters</h1>\n          </Col>\n          <Row className=\"rangeValues\">\n              <Col s={12}>\n                  <h2>Date</h2>\n              </Col>\n              <Col s={12}>\n                <h6 s={2} className=\"rangeLabel\">From</h6>\n                <Input s={10} name='on' type='date' className='datepicker' placeholder={initialDate} value={initialDate} onChange={(e) => this.props.dataRangeChange(e,\"Initial\")} />\n              </Col>\n              <Col s={12}>\n                <h6 s={2} className=\"rangeLabel\">To</h6>\n                <Input s={10} name='on' type='date' className='datepicker' placeholder={finalDate} value={finalDate} onChange={(e) => this.props.dataRangeChange(e,\"Final\")}/>\n              </Col>\n          </Row>\n          <Row>\n              <Col s={12} className=\"selectFilter\">\n                <Input s={12} label=\"From Region\" type=\"select\" value={cityGiven} onChange={(e) => this.props.filterChange(e,\"cityGiven\")}>\n                  <option value=''>All Business Regions</option>\n                  <option value='central'>Central</option>\n                  <option value='east'>East</option>\n                  <option value='west'>West</option>\n                  <option value='MDC'>MDC</option>\n                </Input>\n              </Col>\n          </Row>\n          <Row>\n              <Col s={12} className=\"selectFilter\">\n                <Input s={12} label=\"To City\" type=\"select\" value={cityReceived} onChange={(e) => this.props.filterChange(e,\"cityReceived\")}>\n                  <option value=''>All Business Regions</option>\n                  <option value='central'>Central</option>\n                  <option value='east'>East</option>\n                  <option value='west'>West</option>\n                  <option value='MDC'>MDC</option>\n                </Input>\n              </Col>\n          </Row>\n          <Row>\n              <Col s={12} className=\"selectFilter\">\n                <Input s={12} label=\"Intersys Values\" type=\"select\" value={corevalue} onChange={(e) => this.props.filterChange(e,\"coreValue\")}>\n                  <option value=''>All Core Values</option>\n                  <option value='will_to_win'>Will To Win</option>\n                  <option value='do_the_right_thing'>Do The Right Thing</option>\n                  <option value='make_others_better'>Make Other Better</option>\n                  <option value='professionalism'>Professionalism</option>\n                </Input>\n              </Col>\n          </Row>\n          <Row>\n              <Col s={12} className=\"selectFilter\">\n                <Input s={12} label=\"Nominator Manager\" type=\"text\" value={managerGiven} onChange={(e) => this.props.filterChange(e,\"managerGiven\")} />\n              </Col>\n          </Row>\n          <Row>\n              <Col s={12} className=\"selectFilter\">\n                <Input s={12} label=\"Nominee Manager\" type=\"text\" value={managerReceived} onChange={(e) => this.props.filterChange(e,\"managerReceived\")} />\n              </Col>\n          </Row>\n          <Row className=\"filtersButtons\">\n              <Col s={12}>\n                <Button waves='light' className=\"clear\" onClick={() => this.props.clearFilters()}>Clear</Button>\n                <Button waves='light' className=\"apply\" onClick={() => this.props.applyFilters()}>Apply Filters</Button>\n              </Col>\n          </Row>\n        </Row>   \n      </div>\n    )\n  }\n}\n\nexport default Filters","import React, { Component } from 'react';\nimport { Row, Col, Button } from 'react-materialize';\nimport ReactTable from \"react-table\";\nimport moment from 'moment';\nimport './reportTable.css';\nimport besrvc from '../../assets/images/BEINSERVICE.svg';\nimport beau from '../../assets/images/BEAUTHENTIC.svg';\nimport beac from '../../assets/images/BEACCOUNTABLE.svg';\nimport briex from '../../assets/images/BRINGEXCELLENCE.svg';\n\nclass ReportTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.data\n    }\n  }\n\n  getSvgCoreValue(valuecode) {\n    switch (valuecode) {\n      case 'do_the_right_thing':\n        return beau;\n      case 'will_to_win':\n        return beac;\n      case 'make_others_better':\n        return besrvc;\n      case 'professionalism':\n        return briex;\n      default:\n        return besrvc;\n    }\n  }\n\n  render() {\n    const data = this.state.data;\n    const setValues = data.map(values => {\n      const date = moment(values.nomination.date).format('LL');\n\n      return {\n        date: date,\n        value: <img className=\"core-value-img\" alt={values.nomination.awardInfo.coreValue} src={this.getSvgCoreValue(values.nomination.awardInfo.coreValue)} />,\n        nominee: values.nomination.nomineeInfo.name.displayName,\n        nominee_manager: values.nomination.nomineeInfo.manager.displayName,\n        nominee_city: values.nomination.nomineeInfo.location,\n        nominator: values.nomination.nominatorInfo.name.displayName,\n        nominator_manager: values.nomination.nominatorInfo.manager.displayName,\n        nominator_city: values.nomination.nominatorInfo.location\n      };\n    });\n\n    return (\n      <Row className=\"reportTable\">\n        <Col s={12}>\n          <h1>Data</h1>\n        </Col>\n        <ReactTable\n          data={setValues}\n          columns={[\n            {\n              Header: \"General\",\n              columns: [\n                {\n                  Header: \"Date\",\n                  accessor: \"date\"\n                },\n                {\n                  Header: \"Value\",\n                  accessor: \"value\"\n                }\n              ]\n            },\n            {\n              Header: \"Nominee Info\",\n              columns: [\n                {\n                  Header: \"Name\",\n                  accessor: \"nominee\"\n                },\n                {\n                  Header: \"Manager\",\n                  accessor: \"nominee_manager\"\n                },\n                {\n                  Header: \"Region\",\n                  accessor: \"nominee_city\"\n                }\n              ] \n            },\n            {\n              Header: \"Nominator Info\",\n              columns: [\n                {\n                  Header: \"Name\",\n                  accessor: \"nominator\"\n                },\n                {\n                  Header: \"Manager\",\n                  accessor: \"nominator_manager\"\n                },\n                {\n                  Header: \"Region\",\n                  accessor: \"nominator_city\"\n                }\n              ] \n            }\n          ]}\n          defaultPageSize={10}\n          showPageSizeOptions={false}\n          className=\"-striped -highlight\"\n        />\n        <Col s={12} className=\"exportExcel\">\n          <Button waves='light' node='a' href={process.env.REACT_APP_BACKEND_HOST + \"/stats/excel?\" + this.props.query}>Export to Excel</Button>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default ReportTable\n","import React, { Component } from 'react';\nimport { Row, Col, ProgressBar } from 'react-materialize';\nimport moment from 'moment';\nimport Cookies from 'universal-cookie';\nimport Filters from '../filters/filters';\nimport ReportTable from '../reportTable/reportTable';\nimport './reports.css';\nimport { Redirect } from 'react-router';\nimport { login } from '../../utils/login';\n\nconst COOKIE = new Cookies();\n\nfunction initializeDateRange(value) {\n  let quarter = moment().quarter();\n  let range = {};\n  let initialDate = '';\n  let finalDate = '';\n  const YEAR = new Date().getFullYear();\n  switch (quarter) {\n    case 1:\n      initialDate = moment(YEAR + '-01-01').format('LL');\n      finalDate = moment(YEAR + '-03-31').format('LL');\n      break;\n    case 2:\n      initialDate = moment(YEAR + '-04-01').format('LL');\n      finalDate = moment(YEAR + '-06-30').format('LL');\n      break;\n    case 3:\n      initialDate = moment(YEAR + '-07-01').format('LL');\n      finalDate = moment(YEAR + '-09-30').format('LL');\n      break;\n    case 4:\n      initialDate = moment(YEAR + '-10-01').format('LL');\n      finalDate = moment(YEAR + '-12-31').format('LL');\n      break;\n    default:\n      console.log(\"Not valid date\");\n      break;\n  }\n  range = { initialDate, finalDate };\n  if (value === 'initialDate') {\n    return range.initialDate;\n  }\n  else if (value === 'finalDate') {\n    return range.finalDate;\n  }\n}\n\nclass Reports extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      initialDate: initializeDateRange('initialDate'),\n      finalDate: initializeDateRange('finalDate'),\n      cityGiven: '',\n      cityReceived: '',\n      managerGiven: '',\n      managerReceived: '',\n      corevalue: '',\n      loaded: false,\n      data: [],\n      query: ''\n    };\n    this.dataRangeChange = this.dataRangeChange.bind(this);\n    this.filterChange = this.filterChange.bind(this);\n    this.clearFilters = this.clearFilters.bind(this);\n    this.applyFilters = this.applyFilters.bind(this);\n  }\n\n  dataRangeChange(event, type) {\n    event.preventDefault();\n    var date = event.target.value;\n    if (date !== '') {\n      date = date.split(' ');\n      date[1] = date[1].slice(0, -1);\n      date = date[1] + ' ' + date[0] + ', ' + date[2];\n    }\n    else {\n      date = '';\n    }\n\n    if (type === 'Initial') {\n      this.setState({\n        initialDate: date\n      });\n    }\n    else if (type === 'Final') {\n      this.setState({\n        finalDate: date\n      });\n    }\n  }\n\n  filterChange(event, type) {\n    event.preventDefault();\n    const VALUE = event.target.value;\n\n    switch (type) {\n      case 'cityGiven':\n        this.setState({\n          cityGiven: VALUE\n        });\n        break;\n      case 'cityReceived':\n        this.setState({\n          cityReceived: VALUE\n        });\n        break;\n      case 'level':\n        this.setState({\n          level: VALUE\n        });\n        break;\n      case 'managerGiven':\n        this.setState({\n          managerGiven: VALUE\n        });\n        break;\n      case 'managerReceived':\n        this.setState({\n          managerReceived: VALUE\n        });\n        break;\n      case 'coreValue':\n        this.setState({\n          corevalue: VALUE\n        });\n        break;\n      default:\n        console.log(\n          \"VALUE TYPE NOT RECOGNIZED \\n\",\n          \"Type Received: \" + type + \"\\n\",\n          \"Value Received: \" + VALUE);\n        break;\n    }\n  }\n\n  clearFilters() {\n    this.setState({\n      initialDate: initializeDateRange('initialDate'),\n      finalDate: initializeDateRange('finalDate'),\n      cityGiven: '',\n      cityReceived: '',\n      managerGiven: '',\n      managerReceived: '',\n      corevalue: '',\n      loaded: false,\n      data: []\n    });\n    this.applyFilters();\n  }\n\n  applyFilters() {\n    this.setState({\n      loaded: false\n    });\n\n    const {\n      initialDate,\n      finalDate,\n      cityGiven,\n      cityReceived,\n      managerGiven,\n      managerReceived,\n      corevalue,\n      loaded\n    } = this.state;\n\n    const host = process.env.REACT_APP_BACKEND_HOST;\n    let query = '';\n\n    if (initialDate !== '') {\n      if (query !== '') {\n        query += \"&\";\n      }\n      query += \"from=\" + moment(initialDate).format('YYYY-MM-DD');\n    }\n    if (finalDate !== '') {\n      if (query !== '') {\n        query += \"&\";\n      }\n      query += \"to=\" + moment(finalDate).format('YYYY-MM-DD');\n    }\n    if (cityGiven !== '') {\n      if (query !== '') {\n        query += \"&\";\n      }\n      query += \"citygiven=\" + cityGiven;\n    }\n    if (cityReceived != '') {\n      if (query !== '') {\n        query += \"&\";\n      }\n      query += \"cityreceived=\" + cityReceived;\n    }\n    if (managerGiven != '') {\n      if (query !== '') {\n        query += \"&\";\n      }\n      query += \"managergiven=\" + managerGiven;\n    }\n    if (managerReceived != '') {\n      if (query !== '') {\n        query += \"&\";\n      }\n      query += \"managerreceived=\" + managerReceived;\n    }\n    if (corevalue != '') {\n      if (query !== '') {\n        query += \"&\";\n      }\n      query += \"value=\" + corevalue;\n    }\n    this.setState({\n      query: query\n    });\n\n    return fetch(`${host}/stats?${query}`, {\n      method: 'GET'\n    })\n      .then(response => response.json())\n      .then(nomination => {\n        this.setState({\n          data: nomination,\n          loaded: true\n        });\n      })\n      .catch((json) => {\n        console.log(\"Error applying filters, please try again\");\n      });\n  }\n\n  UNSAFE_componentWillMount() {\n    if (COOKIE.get(\"login\") === undefined) {\n      login();\n    }\n    this.applyFilters();\n  }\n\n  render() {\n    if (this.state.loaded === false) {\n      return (\n        <div>\n          <ProgressBar />\n        </div>\n      );\n    }\n    else if (COOKIE.get(\"login\").usertype === 'normal') {\n      return (<Redirect to=\"/\" />);\n    }\n    else {\n      return (\n        <div>\n          <Row className=\"reportsHeader\">\n            <Col s={12}>\n              <h1>Stats</h1>\n            </Col>\n          </Row>\n          <Row>\n            <Col s={12} m={3}>\n              <Filters dataRangeChange={this.dataRangeChange} filterChange={this.filterChange} data={this.state} clearFilters={this.clearFilters} applyFilters={this.applyFilters} />\n            </Col>\n            <Col s={12} m={9}>\n              <ReportTable data={this.state.data} query={this.state.query} applyFilters={this.applyFilters} />\n            </Col>\n          </Row>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Reports","export const kudosBadgesNamesAndLegends = {\n    ace: {\n        name: 'CVA Received',\n        legend: 'Receive 1 nomination'\n    },\n    novice: {\n        name: 'Novice Nominator',\n        legend: 'Make 1 nomination'\n    },\n    club: {\n        name: 'Club',\n        legend: '3 awards for the same value'\n    },\n    star: {\n        name: 'Super Star',\n        legend: '5 awards for the same value'\n    },\n    diamond: {\n        name: 'Diamond',\n        legend: 'Earn one of each 4 Core Values'\n    }\n};\n","import React from 'react';\nimport { kudosBadgesNamesAndLegends } from './constants';\nimport './KudosBadges.scss';\n\nimport ace from '../../../../assets/images/kudos/ace.svg';\nimport club from '../../../../assets/images/kudos/club.svg';\nimport diamond from '../../../../assets/images/kudos/diamond.svg';\nimport novice from '../../../../assets/images/kudos/novice.svg';\nimport star from '../../../../assets/images/kudos/star.svg';\n\nconst badgesList = {\n    ace: ace,\n    club: club,\n    diamond: diamond,\n    novice: novice,\n    star: star\n};\n\nfunction KudosBadges ({ awardsInformation }) {\n    if (!awardsInformation) {\n        return null;\n    }\n\n    const kudosBadges = awardsInformation.kudos;\n    const badges = Object.keys(badgesList).map((badge) => (\n        <div className='tooltip-wrapper' key={`tooltip-kudos-${badge}`}>\n            <img\n                alt={`kudos-${badge}-badge`}\n                className={kudosBadges.indexOf(badge) !== -1 ? 'kudos-badge active-badge' : 'kudos-badge'}\n                src={badgesList[badge]} \n            />\n            <div className='tooltip'>\n                <span>{kudosBadgesNamesAndLegends[badge].name}: </span>{kudosBadgesNamesAndLegends[badge].legend}\n            </div>\n        </div>\n    ));\n\n    return (\n        <div className='kudos-badges-container'>\n            <p className='title'>My Kudos Badges</p>\n            {badges}\n        </div>\n    );\n};\n\nexport default KudosBadges;\n","import React from 'react';\nimport './Medal.scss';\n\n// Medal SVGs\nimport blue from '../../../../../assets/images/awards/blue.svg';\nimport bronze from '../../../../../assets/images/awards/bronze.svg';\nimport captain from '../../../../../assets/images/awards/captain.svg';\nimport champion from '../../../../../assets/images/awards/champion.svg';\nimport cheerleader from '../../../../../assets/images/awards/cheerleader.svg';\nimport coach from '../../../../../assets/images/awards/coach.svg';\nimport contributor from '../../../../../assets/images/awards/contributor.svg';\nimport gold from '../../../../../assets/images/awards/gold.svg';\nimport noGiven from '../../../../../assets/images/awards/noGiven.svg';\nimport noReceived from '../../../../../assets/images/awards/noReceived.svg';\nimport silver from '../../../../../assets/images/awards/silver.svg';\nimport platinum from '../../../../../assets/images/awards/platinum.svg';\n\n// Medal Dictionary (name: path)\nconst medalList = {\n  noGiven: noGiven,\n  noReceived: noReceived,\n  blue: blue,\n  bronze: bronze,\n  silver: silver,\n  gold: gold,\n  platinum: platinum,\n  contributor: contributor,\n  cheerleader: cheerleader,\n  coach: coach,\n  captain: captain,\n  champion: champion\n};\n\nfunction Medal ({ count, medal, title }) {\n    return (\n        <div className='medal-container'>\n            <p className='title'>{title}: <span className=\"count\">{count}</span></p>\n            <img className='medal-image' src={medalList[medal]}/>\n        </div>\n    );\n};\n\nexport default Medal;\n","import React from 'react';\nimport './MedalTooltip.scss';\n\nfunction MedalTooltip ({ countToNext, currentMedal, nextMedal }) {\n    if (countToNext === 0) {\n        return (\n            <div className='tooltip'>\n                <p className='highest-level'><span>Congratulations!</span> you are awesome, have reached the highest level</p>\n            </div>\n        )\n    }\n    \n    const currentLevel = () => (currentMedal !== 'noGiven' && currentMedal !== 'noReceived') ? (\n        <React.Fragment>\n            <p className='text'>You currently earned a</p>\n            <p className='current-level'>{currentMedal} badge</p>\n        </React.Fragment>\n    ) : '';\n\n    const nextLevel = () => (\n        <React.Fragment>\n            <p className='count'>{countToNext}</p>\n            <p className=\"text\">{countToNext > 1 ? 'more nominations to' : 'more nomination to'}</p>\n            <p className=\"next-level\">{`${nextMedal} badge`}</p>\n        </React.Fragment>\n    );\n\n\n    return (\n        <div className='tooltip'>\n            {currentLevel()}\n            {nextLevel()}\n        </div>\n    );\n};\n\nexport default MedalTooltip;\n","import React from 'react';\nimport { ProgressBar } from 'react-materialize';\nimport Medal from './Medal/Medal';\nimport MedalTooltip from './MedalTooltip/MedalTooltip'\nimport './MedalsContainer.scss';\n\nfunction MedalsContainer ({ awardsInformation }) {\n    if (!awardsInformation) {\n        return (\n            <div className='medals-container'>\n                <ProgressBar />\n            </div>\n        );\n    }\n\n    const awardedData = awardsInformation.badges.awarded;\n    const earnedData = awardsInformation.badges.earned;\n    const nextAwardedData = awardsInformation.nextBadges.awarded;\n    const nextEarnedData = awardsInformation.nextBadges.earned;\n\n    return (\n        <div className='medals-container'>\n            <div className='medal-tooltip-wrapper'>\n                <Medal\n                    count={awardedData.count}\n                    medal={awardedData.medal}\n                    title='Awards Given'\n                />\n                <MedalTooltip\n                    countToNext={nextAwardedData.count}\n                    currentMedal={awardedData.medal}\n                    nextMedal={nextAwardedData.next}\n                />\n            </div>\n            <div className='medal-tooltip-wrapper'>\n                <Medal\n                    count={earnedData.count}\n                    medal={earnedData.medal}\n                    title='Awards Received'\n                />\n                <MedalTooltip\n                    countToNext={nextEarnedData.count}\n                    currentMedal={earnedData.medal}\n                    nextMedal={nextEarnedData.next}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default MedalsContainer;\n","import Cookies from 'universal-cookie';\n\nconst cookie = new Cookies();\nconst host = process.env.REACT_APP_BACKEND_HOST;\n\nexport const getAwardsInformation = () => {\n    return fetch(`${host}/user/gamification/${cookie.get(\"login\").username}`, {\n        headers: {\n            'Accept': 'application/json',\n            'Authorization': `Bearer ${cookie.get(\"login\").token}`,\n            'Content-Type': 'application/json'\n        },\n        method: 'GET'\n    }).then(response => response.json())\n    .then(awardsInfo => awardsInfo)\n    .catch((error) => console.log(\"Error retrieving awards information, please try again\", error.message));\n};\n","import React, { useEffect, useState } from 'react';\nimport { Button } from 'react-materialize';\nimport { Link } from 'react-router-dom';\nimport KudosBadges from './KudosBadges/KudosBadges';\nimport MedalsContainer from './MedalsContainer/MedalsContainer';\nimport { getAwardsInformation } from './helpers';\nimport './Home.scss';\n\nfunction HomePage() {\n    const [awardsInformation, setAwardsInformation] = useState(null);\n\n    const getAwardsData = async () => {\n        const awardsData = await getAwardsInformation();\n        setAwardsInformation(awardsData);\n    }\n\n    useEffect(() => {\n        getAwardsData();\n    },[]);\n\n    return (\n        <div className='home-page'>\n            <div className='home-header'>\n                <h1>Apex Core Values Awards</h1>\n                <Link to=\"/nominate\">\n                    <Button waves='light'>Nominate Now</Button>\n                </Link>\n            </div>\n            <div className='home-container'>\n                <MedalsContainer awardsInformation={awardsInformation} />\n                <KudosBadges awardsInformation={awardsInformation} />\n            </div>\n        </div>\n    );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst NavItem = ({ divider, children, href = '', onClick, ...props }) => {\n  if (divider) return <li className=\"divider\" />;\n  const a = onClick ? (\n    <a onClick={onClick}>{children}</a>\n  ) : (\n    <Link to={href}>{children}</Link>\n  );\n  return <li {...props}>{a}</li>;\n};\n\nNavItem.propTypes = {\n  /**|\n   * children can be a string value or a node\n   */\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  divider: PropTypes.bool,\n  href: PropTypes.string,\n  /**\n   * NavItem can have onClick. If it does have, href\n   * will not be rendered\n   */\n  onClick: PropTypes.func\n};\n\nexport default NavItem;","import React, { Component } from 'react';\nimport { Table } from 'react-materialize';\nimport moment from 'moment';\nimport '../profileTable/profileTable.css';\nimport besrvc from '../../assets/images/BEINSERVICE.svg';\nimport beau from '../../assets/images/BEAUTHENTIC.svg';\nimport beac from '../../assets/images/BEACCOUNTABLE.svg';\nimport briex from '../../assets/images/BRINGEXCELLENCE.svg';\nimport medalGray from '../../assets/images/medalGray.png';\n\nconst YEAR = new Date().getFullYear();\n\nexport default class ProfileTable extends Component {\n\n  constructor(props) {\n    super(props)\n    this.getCoreValue = this.getCoreValue.bind(this);\n  }\n\n  getCoreValue(valuecode) {\n    switch (valuecode) {\n      case 'beaccountable':\n        return beac;\n      case 'beauthentic':\n        return beau;\n      case 'beinservice':\n        return besrvc;\n      case 'bringexcellence':\n        return briex;\n      default:\n        return besrvc;\n    }\n  }\n\n  getDiploma(type,id) {\n    const host = process.env.REACT_APP_BACKEND_HOST;\n    const diplomaURl = `${host}/form/diploma/${id}`;\n    if(this.props.type === \"Received\") \n      if(type === \"th\")\n        return <th className=\"diploma\" data-field=\"diploma\">Diploma</th>\n      else\n      return <td className=\"diploma\"><a href={diplomaURl}><i class=\"material-icons\">movie_filter</i></a></td>\n  }\n\n  render() {\n\n    if (this.props.awards.length === 0) {\n      return (\n        <div className=\"no_awards\">\n          {this.props.type === \"Given\" ? <h2>😔 No Awards given yet for <span>{YEAR}</span></h2> : <h2>😔 No Awards received yet for <span>{YEAR}</span></h2>}\n          <img src={medalGray} alt='medal' />\n        </div>\n      )\n    }\n\n    return (\n      <div>\n        <Table className=\"my_activity\">\n          <thead>\n            <tr>\n              <th className=\"date\" data-field=\"date\">Date</th>\n              {this.props.type === \"Given\" ? <th className=\"name\" data-field=\"name\">Nominee</th> : <th data-field=\"name\">Nominator</th>}\n              <th className=\"value\" data-field=\"value\">Value</th>\n              <th className=\"reason\" data-field=\"reason\">Reason</th>\n              {this.getDiploma(\"th\")}\n            </tr>\n          </thead>\n          <tbody>\n            {this.props && this.props.awards && this.props.awards.map(item =>\n              <tr key={item._id}>\n                <td className=\"date\">{moment(new Date(item.nomination.date)).format('MMMM Do, YYYY')}</td>\n                {this.props.type === \"Given\" ? <td className=\"name\">{item.nomination.nomineeInfo.name.displayName}</td> : <td className=\"name\">{item.nomination.nominatorInfo.name.displayName}</td>}\n                <td className=\"value\"><img className=\"core_value\" alt={item.nomination.awardInfo.coreValue} src={this.getCoreValue(item.nomination.awardInfo.coreValue)} /></td>\n                <td className=\"reason\">{item.nomination.awardInfo.reason}</td>\n                {this.getDiploma(\"td\",item._id)}\n              </tr>\n            )}\n          </tbody>\n        </Table>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Row, Col, Tabs, Tab } from 'react-materialize';\nimport ProfileTable from '../profileTable/profileTable';\nimport './profile.css';\n\nexport default class ProfileModal extends Component {\n\n  render() {\n    return (\n      <Row className=\"tabs-container\">\n        <Col s={12} m={12}>\n          <Tabs className='z-depth-1 awards-tabs'>\n            <Tab title=\"Given\" active>\n              <Row className='tab-container'>\n                <Col s={12} m={12}>\n                  <ProfileTable awards={this.props.sent} type={'Given'} />\n                </Col>\n              </Row>\n            </Tab>\n            <Tab title=\"Received\">\n              <Row className='tab-container'>\n                <Col s={12} m={12}>\n                  <ProfileTable awards={this.props.received} type={'Received'} />\n                </Col>\n              </Row>\n            </Tab>\n          </Tabs>\n        </Col>\n      </Row>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Modal, Row, Col, ProgressBar} from 'react-materialize';\nimport NavItem from '../navItem/navItem';\nimport ProfileModal from '../ProfileModal/ProfileModal';\n\nimport Cookies from 'universal-cookie';\nconst cookie = new Cookies();\n\nclass MyActivity extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      nominations_sent: [],\n      nominations_received: [],\n      page_loaded: false\n    }\n    this.fetchData = this.fetchData.bind(this);\n    this.clearData = this.clearData.bind(this);\n  }\n\n  fetchData() {\n    const host = process.env.REACT_APP_BACKEND_HOST;\n    fetch(`${host}/form`)\n      .then(response => response.json())\n      .then(data => {\n        let nominations_received = data.filter(nominations_received => `${nominations_received.nomination.nomineeInfo.name.user}@apexsystems.com` == cookie.get(\"login\").email);\n        let nominations_sent = data.filter(nominations_sent => `${nominations_sent.nomination.nominatorInfo.name.user}@apexsystems.com` == cookie.get(\"login\").email);\n        this.setState({\n          nominations_received,\n          nominations_sent,\n          page_loaded: true\n        })\n      });\n  }\n  clearData() {\n    this.setState({\n      nominations_sent: [],\n      nominations_received: [],\n      page_loaded: false\n    });\n  }\n\n  render() {\n    const { page_loaded, nominations_sent, nominations_received  } = this.state; \n    \n    return (\n        <Modal\n          id='awardModal'\n          header='Awards'\n          modalOptions={{ ready: this.fetchData, complete: this.clearData }}\n          trigger={<NavItem>My Activity</NavItem>}>\n          {page_loaded ? <ProfileModal sent={nominations_sent} received={nominations_received} /> : <Row> <Col s={12}> <ProgressBar /> </Col> </Row>}\n        </Modal>  \n    );\n  }\n}\n\nexport default MyActivity;\n","import React, { useEffect, useState } from 'react';\nimport { Icon, Dropdown, Navbar, NavItem } from 'react-materialize';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\nimport MyActivity from '../../MyActivity/MyActivity';\nimport { login } from '../../../utils/login';\nimport Logo from '../../../assets/images/logos/apex-logo.svg';\nimport './NavBar.scss';\n\nconst cookie = new Cookies();\n\nconst RouterNavItem = ({ href, children }) => (<li><Link to={ href }>{ children }</Link></li>);\n\nfunction NavBar() {\n    const [loginData, setLoginData] = useState({});\n\n    useEffect(() => {\n        setLoginData(cookie.get('login'));\n    }, []);\n\n    const logo = (\n        <Link to=\"/\">\n            <img href=\"/\" className=\"logo\" src={Logo} />\n        </Link>\n    );\n\n    const adminNav = () =>\n        loginData && loginData.usertype === 'admin' ? \n            <RouterNavItem href='/stats'>Stats</RouterNavItem> \n            : null;\n\n    const signOutSession = (event) => {\n        event.preventDefault();\n        cookie.remove('login', { path: '/' });\n        login();\n    }\n\n    const dropdownNav = () => (\n        <Dropdown trigger={\n            <NavItem className='session-menu'>\n                {loginData && loginData.name}\n                <i className='material-icons right'>keyboard_arrow_down</i>\n            </NavItem>\n        }>\n            <li className='help'>\n                <a href='https://intersysconsulting.slack.com/app_redirect?channel=recognition-app-help' target='_blank'>\n                    help<i className='material-icons right'>help</i>\n                </a>\n            </li>\n            <li className='sign-out' onClick={(event) => signOutSession(event)}>\n                <p>\n                    Sign Out <i className='material-icons right'>power_settings_new</i>\n                </p>\n            </li>\n        </Dropdown>\n    );\n\n    return (\n        <Navbar brand={logo} right className='navigation-bar'>\n            <RouterNavItem href='/'>\n                <Icon>home</Icon>\n            </RouterNavItem>\n            <RouterNavItem href='/nominate'>Nominate</RouterNavItem>\n            <MyActivity />\n            {adminNav()}\n            {dropdownNav()}\n        </Navbar>\n    );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { Button } from 'react-materialize';\nimport './FormButtons.scss';\n\nfunction FormButtons({ sendForm }) {\n    \n    return (\n        <div className='buttons-container'>\n            <Button\n                className='submit-and-add-more-button'\n                id='continue'\n                key='continue'\n                onClick={() => sendForm('continue')}\n                waves='light'\n            >\n                Submit and Add More Nominations\n            </Button>\n            <Button\n                className='submit-button'\n                id='send'\n                key='send'\n                onClick={() => sendForm('send')}\n                waves='light'\n            >\n                Submit\n            </Button>\n        </div>\n    );\n};\n\nexport default FormButtons;\n","export const colorClassForValue = {\n    'will_to_win': 'apex-teal',\n    'do_the_right_thing': 'apex-orange',\n    'make_others_better': 'apex-dark-blue',\n    'professionalism': 'apex-blue'\n};\n","import React from 'react';\nimport { Button } from 'react-materialize';\nimport { fromSnakeToTitleCase } from '../../../../utils/transformations';\nimport { colorClassForValue } from './constants';\nimport './Values.scss';\n\nfunction Values({\n    onValueSelection,\n    selectedValue,\n    valuesList\n}) {\n    if(!Array.isArray(valuesList) || valuesList.length === 0) {\n        return;\n    }\n\n    const getValues = valuesList.map((value) => {\n        const valueClass = `value ${value === selectedValue ? `active ${colorClassForValue[value]}` : 'default-color'}`;\n    \n        return (\n            <Button\n                className={valueClass}\n                id={value}\n                key={`value-button-${value}`}\n                onClick={(event) => onValueSelection(event.target.value)}\n                value={value}\n                waves='light'\n            >\n                {fromSnakeToTitleCase(value)}\n            </Button>  \n        );\n    });\n\n    return (\n        <div className='values-container'>\n            <p className=\"title\">Choose a Value</p>\n            {getValues}\n        </div>\n    );\n};\n\nexport default Values;\n","export const fromSnakeToTitleCase = (snake) => {\n    if (snake) {\n        return snake.replace(/\\_/g, ' ').replace(/\\w\\S*/g, (txt) => txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase());\n    }\n\n    return '';\n};\n","export const VALUES = [\n    'will_to_win',\n    'do_the_right_thing',\n    'make_others_better',\n    'professionalism'\n];\n\nexport const DEFAULT_VALIDATIONS = {\n    message: {\n        error: null,\n        valid: false\n    }, \n    nomineeName: {\n        error: null,\n        valid: false\n    }\n};\n","import Cookies from 'universal-cookie';\n\nconst cookie = new Cookies();\nconst host = process.env.REACT_APP_BACKEND_HOST;\n\n//Send Nomination\nexport async function sendNomination(nomineeName, message, selectedValue) {\n\n    return fetch(`${host}/form`, {\n        method: 'POST',\n        headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `${cookie.get(\"login\").token}`\n        },\n        body: JSON.stringify({\n            \"nomination\": {\n                \"awardInfo\": {\n                    \"coreValue\": selectedValue,\n                    \"reason\": message\n                },\n                \"nomineeInfo\": {\n                    \"name\": nomineeName\n                }\n            }\n        }),\n        mode: 'cors'\n    }).then((response) => response.status === 200 ? true : false)\n    .catch((error) => console.log(\"Error sending form to server, please try again\", error.message));\n};\n\n//Validators\nexport async function validateEmail(email) {\n    const emailAddress = email.toLowerCase();\n    \n    const status = await fetch(`${host}/user/${emailAddress}`, {\n        method: 'GET',\n        headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `${cookie.get(\"login\").token}`\n        },\n        mode: 'cors'\n    }).then((response) => response.status)\n    .catch((error) => console.log(\"Error validating email, please try again\", error.message));\n\n    switch(status) {\n        case 200:\n            return [true, ''];\n        case 401: \n            return [false, getErrorMessage['nomineeName']];\n        case 403: \n            return [false, getErrorMessage['noAutoNomination']];\n        default:\n            return [false, 'errorInRequest']\n    }\n};\n\nexport const validateMessage = (message) => \n    message.length >= 5 && message.length <=255 ? [true, ''] : [false, getErrorMessage['message']];\n\n//Dictionary of messages\nexport const getErrorMessage = {\n    'nomineeName': 'The email provided is not valid or is not part of the organization',\n    'message': 'The minimum lenght is 15 characters and maximum is 255',\n    'noAutoNomination': 'You can not nominate yourself, please try with something more ethic',\n    'errorInRequest': 'The email validator is experiencing issues, please try again, if the issue continues contact the administrators'\n};\n\n//Dictionary of validators\nexport const validateField = {\n    'nomineeName': async (email) => await validateEmail(email),\n    'message': (message) => validateMessage(message)\n};\n","import React, { useState } from 'react';\nimport { Input } from 'react-materialize';\nimport FormButtons from './FormButtons/FormButtons';\nimport Values from './Values/Values';\nimport { DEFAULT_VALIDATIONS, VALUES } from './constants';\nimport { validateField, sendNomination } from './helpers';\nimport './Nomination.scss';\n\nfunction NominationForm({ history }) {\n    const [message, setMessage] = useState('');\n    const [nomineeName, setNomineeName] = useState('');\n    const [selectedValue, setSelectedValue] = useState('will_to_win');\n    const [validField, setValidField] = useState(DEFAULT_VALIDATIONS);\n\n    const clearForm = () => {\n        setMessage('');\n        setNomineeName('');\n        setSelectedValue('will_to_win');\n        setValidField(DEFAULT_VALIDATIONS);\n    }\n\n    const handleBlur = async (id, value) => {\n        if (value === '') {\n            return;\n        }\n\n        const formObject = { ...validField }\n        const validation = await validateField[id](value) || [false, 'Unknown field, no validation performed'];\n        const validatedField = validation[0];\n        const errorMessage = validation[1];;\n        \n        Object.assign(formObject, {\n            [id]: {\n                error: errorMessage,\n                valid: validatedField\n            } \n        });\n        setValidField(formObject);\n    };\n\n    const sendForm = async (option) => {\n        const isFormValid = validateForm();\n\n        if (isFormValid) {\n            const wasSuccessfullySent = await sendNomination(nomineeName, message, selectedValue);\n            if (wasSuccessfullySent) {\n                window.Materialize.toast(\n                    'Your Nomination has been <span>successfully sent</span><i class=\"material-icons\">check</i>', \n                    4000, \n                    'success-toast'\n                );\n\n                (option === 'send') ? history.push('/') : clearForm();\n            }\n        }\n    }\n\n    const validateForm = () => {\n        let isFormValid = true;\n\n        Object.keys(validField).forEach((field) => {\n            if(!validField[field].valid) {\n                isFormValid = false;\n            }\n        });\n\n        if (!isFormValid) {\n            window.Materialize.toast(\n                'You have information to be completed, please properly fill it before sending your nomination <i class=\"material-icons\">info</i>', \n                4000, \n                'info-toast'\n            );\n        }\n\n        return isFormValid;\n    }\n\n    return (\n        <div className='nomination-form'>\n            <div className='nomination-header'>\n                <h1>New Nomination</h1>\n            </div>\n            <div className='nomination-form-container'>\n                <Values\n                    onValueSelection={setSelectedValue}\n                    selectedValue={selectedValue}\n                    valuesList={VALUES}\n                />\n                <div className='fields-container'>\n                    <div className='email-field'>\n                        <Input\n                            id='nomineeName'\n                            error={validField['nomineeName'].error}\n                            label='Nominee Email*'\n                            onBlur={(event) => handleBlur(event.target.id, event.target.value)}\n                            onChange={(event) => setNomineeName(event.target.value)}\n                            placeholder='email'\n                            type='text'\n                            value={nomineeName}\n                        >\n                            <span>@apexsystems.com</span>\n                        </Input>\n                    </div>\n                    <Input\n                        id='message'\n                        error={validField['message'].error}\n                        label='Your message for the nominee*'\n                        maxLength='255'\n                        onBlur={(event) => handleBlur(event.target.id, event.target.value)}\n                        onChange={(event) => setMessage(event.target.value)}\n                        type='textarea'\n                        value={message}\n                    />\n                    <FormButtons\n                        sendForm={sendForm}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default NominationForm;\n","import React from 'react'\nimport './RouteNotFound.scss';\n\nfunction RouteNotFound({ location }) {\n     \n    return (\n        <div>\n            <h3>\n                <p>Error 404 <code>{location.pathname}</code> Not Found </p>\n            </h3>\n        </div>\n    );\n}\n\nexport default RouteNotFound;\n","import React, { useEffect } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { base } from './utils/constants';\nimport { login } from './utils/login';\n\n//Old Components (To be removed when new components are finished)\nimport Auth from './components/auth/auth';\nimport Reports from './components/reports/reports';\n\n//New Components\nimport HomePage from './components/newComponents/Home/Home';\nimport NavBar from './components/newComponents/NavBar/NavBar';\nimport NominationForm from './components/newComponents/Nomination/Nomination';\nimport RouteNotFound from './components/newComponents/RouteNotFound/RouteNotFound';\n\nfunction App() {\n    useEffect(() => {\n        login();\n    },[]);\n     \n    return (\n        <BrowserRouter basename={base}>\n            <div className=\"app\">\n                <NavBar/> \n                <div id=\"app-content\">\n                    <Switch>\n                        <Route exact path=\"/\" component={HomePage}/>\n                        <Route exact path=\"/auth\" component={Auth} />\n                        <Route exact path=\"/stats\" component={Reports} />\n                        <Route exact path=\"/nominate\" component={NominationForm} />\n                        <Route component={RouteNotFound} />\n                    </Switch>  \n                </div>\n            </div>\n        </BrowserRouter>   \n    );\n}\n\nexport default App;\n","export const base = process.env.REACT_APP_PUBLIC_URL;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducers from './reducers/all';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport './index.css';\n\nconst store = createStore(reducers);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n\n    document.getElementById('root')\n)\nregisterServiceWorker();"],"sourceRoot":""}